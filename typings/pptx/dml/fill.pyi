"""
This type stub file was generated by pyright.
"""

from pptx.compat import Sequence
from pptx.shared import ElementProxy
from pptx.util import lazyproperty

"""DrawingML objects related to fil"""
class FillFormat:
    """
    Provides access to the curr"""
    def __init__(self, eg_fill_properties_parent, fill_obj) -> None:
        ...
    
    @classmethod
    def from_fill_parent(cls, eg_fillProperties_parent): # -> Self@FillFormat:
        """
        Return a |FillFormat| i"""
        ...
    
    @property
    def back_color(self):
        """Return a |ColorFormat| object re"""
        ...
    
    def background(self): # -> None:
        """
        Sets the fill type to n"""
        ...
    
    @property
    def fore_color(self):
        """
        Return a |ColorFormat| """
        ...
    
    def gradient(self): # -> None:
        """Sets the fill type to gradient.
"""
        ...
    
    @property
    def gradient_angle(self): # -> float | None:
        """Angle in float degrees of line o"""
        ...
    
    @gradient_angle.setter
    def gradient_angle(self, value): # -> None:
        ...
    
    @property
    def gradient_stops(self):
        """|GradientStops| object providing"""
        ...
    
    @property
    def pattern(self):
        """Return member of :ref:`MsoPatter"""
        ...
    
    @pattern.setter
    def pattern(self, pattern_type): # -> None:
        ...
    
    def patterned(self): # -> None:
        """Selects the pattern fill type.

"""
        ...
    
    def solid(self): # -> None:
        """
        Sets the fill type to s"""
        ...
    
    @property
    def type(self): # -> None:
        """
        Return a value from the"""
        ...
    


class _Fill:
    """
    Object factory for fill obj"""
    def __new__(cls, xFill): # -> _NoneFill | _BlipFill | _GradFill | _GrpFill | _NoFill | _PattFill | _SolidFill | _Fill:
        ...
    
    @property
    def back_color(self):
        """Raise TypeError for types that d"""
        ...
    
    @property
    def fore_color(self):
        """Raise TypeError for types that d"""
        ...
    
    @property
    def pattern(self):
        """Raise TypeError for fills that d"""
        ...
    
    @property
    def type(self):
        ...
    


class _BlipFill(_Fill):
    @property
    def type(self):
        ...
    


class _GradFill(_Fill):
    """Proxies an `a:gradFill` element."""
    def __init__(self, gradFill) -> None:
        ...
    
    @property
    def gradient_angle(self): # -> float | None:
        """Angle in float degrees of line o"""
        ...
    
    @gradient_angle.setter
    def gradient_angle(self, value): # -> None:
        ...
    
    @lazyproperty
    def gradient_stops(self): # -> _GradientStops:
        """|_GradientStops| object providin"""
        ...
    
    @property
    def type(self):
        ...
    


class _GrpFill(_Fill):
    @property
    def type(self):
        ...
    


class _NoFill(_Fill):
    @property
    def type(self):
        ...
    


class _NoneFill(_Fill):
    @property
    def type(self): # -> None:
        ...
    


class _PattFill(_Fill):
    """Provides access to patterned fil"""
    def __init__(self, pattFill) -> None:
        ...
    
    @lazyproperty
    def back_color(self): # -> ColorFormat:
        """Return |ColorFormat| object that"""
        ...
    
    @lazyproperty
    def fore_color(self): # -> ColorFormat:
        """Return |ColorFormat| object that"""
        ...
    
    @property
    def pattern(self):
        """Return member of :ref:`MsoPatter"""
        ...
    
    @pattern.setter
    def pattern(self, pattern_type): # -> None:
        ...
    
    @property
    def type(self):
        ...
    


class _SolidFill(_Fill):
    """Provides access to fill properti"""
    def __init__(self, solidFill) -> None:
        ...
    
    @lazyproperty
    def fore_color(self): # -> ColorFormat:
        """Return |ColorFormat| object cont"""
        ...
    
    @property
    def type(self):
        ...
    


class _GradientStops(Sequence):
    """Collection of |GradientStop| obj"""
    def __init__(self, gsLst) -> None:
        ...
    
    def __getitem__(self, idx): # -> _GradientStop:
        ...
    
    def __len__(self): # -> int:
        ...
    


class _GradientStop(ElementProxy):
    """A single gradient stop.

    A g"""
    def __init__(self, gs) -> None:
        ...
    
    @lazyproperty
    def color(self): # -> ColorFormat:
        """Return |ColorFormat| object cont"""
        ...
    
    @property
    def position(self):
        """Location of stop in gradient pat"""
        ...
    
    @position.setter
    def position(self, value): # -> None:
        ...
    


