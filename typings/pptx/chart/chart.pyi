"""
This type stub file was generated by pyright.
"""

from pptx.compat import Sequence
from pptx.shared import ElementProxy, PartElementProxy
from pptx.util import lazyproperty

"""Chart-related objects such as Ch"""
class Chart(PartElementProxy):
    """A chart object."""
    def __init__(self, chartSpace, chart_part) -> None:
        ...
    
    @property
    def category_axis(self): # -> CategoryAxis | DateAxis | ValueAxis:
        """
        The category axis of th"""
        ...
    
    @property
    def chart_style(self): # -> None:
        """
        Read/write integer inde"""
        ...
    
    @chart_style.setter
    def chart_style(self, value): # -> None:
        ...
    
    @property
    def chart_title(self): # -> ChartTitle:
        """A |ChartTitle| object providing """
        ...
    
    @property
    def chart_type(self):
        """Member of :ref:`XlChartType` enu"""
        ...
    
    @lazyproperty
    def font(self): # -> Font:
        """Font object controlling text for"""
        ...
    
    @property
    def has_legend(self):
        """
        Read/write boolean, |Tr"""
        ...
    
    @has_legend.setter
    def has_legend(self, value): # -> None:
        ...
    
    @property
    def has_title(self): # -> bool:
        """Read/write boolean, specifying w"""
        ...
    
    @has_title.setter
    def has_title(self, value): # -> None:
        ...
    
    @property
    def legend(self): # -> Legend | None:
        """
        A |Legend| object provi"""
        ...
    
    @lazyproperty
    def plots(self): # -> _Plots:
        """
        The sequence of plots i"""
        ...
    
    def replace_data(self, chart_data): # -> None:
        """
        Use the categories and """
        ...
    
    @lazyproperty
    def series(self): # -> SeriesCollection:
        """
        A |SeriesCollection| ob"""
        ...
    
    @property
    def value_axis(self): # -> ValueAxis:
        """
        The |ValueAxis| object """
        ...
    


class ChartTitle(ElementProxy):
    """Provides properties for manipula"""
    def __init__(self, title) -> None:
        ...
    
    @lazyproperty
    def format(self): # -> ChartFormat:
        """|ChartFormat| object providing a"""
        ...
    
    @property
    def has_text_frame(self): # -> bool:
        """Read/write Boolean specifying wh"""
        ...
    
    @has_text_frame.setter
    def has_text_frame(self, value): # -> None:
        ...
    
    @property
    def text_frame(self): # -> TextFrame:
        """|TextFrame| instance for this ch"""
        ...
    


class _Plots(Sequence):
    """
    The sequence of plots in a """
    def __init__(self, plotArea, chart) -> None:
        ...
    
    def __getitem__(self, index): # -> list[Unknown]:
        ...
    
    def __len__(self): # -> int:
        ...
    


