"""
This type stub file was generated by pyright.
"""

from ..util import lazyproperty

"""
Data label-related objects.
"""
class DataLabels:
    """Provides access to properties of"""
    def __init__(self, dLbls) -> None:
        ...
    
    @lazyproperty
    def font(self): # -> Font:
        """
        The |Font| object that """
        ...
    
    @property
    def number_format(self): # -> Literal['General']:
        """
        Read/write string speci"""
        ...
    
    @number_format.setter
    def number_format(self, value): # -> None:
        ...
    
    @property
    def number_format_is_linked(self): # -> Literal[True]:
        """
        Read/write boolean spec"""
        ...
    
    @number_format_is_linked.setter
    def number_format_is_linked(self, value): # -> None:
        ...
    
    @property
    def position(self): # -> None:
        """
        Read/write :ref:`XlData"""
        ...
    
    @position.setter
    def position(self, value): # -> None:
        ...
    
    @property
    def show_category_name(self):
        """Read/write. True when name of ca"""
        ...
    
    @show_category_name.setter
    def show_category_name(self, value): # -> None:
        ...
    
    @property
    def show_legend_key(self):
        """Read/write. True when data label"""
        ...
    
    @show_legend_key.setter
    def show_legend_key(self, value): # -> None:
        ...
    
    @property
    def show_percentage(self):
        """Read/write. True when data label"""
        ...
    
    @show_percentage.setter
    def show_percentage(self, value): # -> None:
        ...
    
    @property
    def show_series_name(self):
        """Read/write. True when data label"""
        ...
    
    @show_series_name.setter
    def show_series_name(self, value): # -> None:
        ...
    
    @property
    def show_value(self):
        """Read/write. True when label disp"""
        ...
    
    @show_value.setter
    def show_value(self, value): # -> None:
        ...
    


class DataLabel:
    """
    The data label associated w"""
    def __init__(self, ser, idx) -> None:
        ...
    
    @lazyproperty
    def font(self): # -> Font:
        """The |Font| object providing text"""
        ...
    
    @property
    def has_text_frame(self): # -> bool:
        """
        Return |True| if this d"""
        ...
    
    @has_text_frame.setter
    def has_text_frame(self, value): # -> None:
        ...
    
    @property
    def position(self): # -> None:
        """
        Read/write :ref:`XlData"""
        ...
    
    @position.setter
    def position(self, value): # -> None:
        ...
    
    @property
    def text_frame(self): # -> TextFrame:
        """
        |TextFrame| instance fo"""
        ...
    


