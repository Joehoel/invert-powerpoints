"""
This type stub file was generated by pyright.
"""

from pptx.shared import ElementProxy
from pptx.util import lazyproperty

"""Base shape-related objects such """
class BaseShape:
    """Base class for shape objects.

 """
    def __init__(self, shape_elm, parent) -> None:
        ...
    
    def __eq__(self, other) -> bool:
        """|True| if this shape object prox"""
        ...
    
    def __ne__(self, other) -> bool:
        ...
    
    @lazyproperty
    def click_action(self): # -> ActionSetting:
        """|ActionSetting| instance providi"""
        ...
    
    @property
    def element(self): # -> Unknown:
        """`lxml` element for this shape, e"""
        ...
    
    @property
    def has_chart(self): # -> Literal[False]:
        """
        |True| if this shape is"""
        ...
    
    @property
    def has_table(self): # -> Literal[False]:
        """
        |True| if this shape is"""
        ...
    
    @property
    def has_text_frame(self): # -> Literal[False]:
        """
        |True| if this shape ca"""
        ...
    
    @property
    def height(self):
        """
        Read/write. Integer dis"""
        ...
    
    @height.setter
    def height(self, value): # -> None:
        ...
    
    @property
    def is_placeholder(self):
        """
        True if this shape is a"""
        ...
    
    @property
    def left(self):
        """
        Read/write. Integer dis"""
        ...
    
    @left.setter
    def left(self, value): # -> None:
        ...
    
    @property
    def name(self):
        """
        Name of this shape, e.g"""
        ...
    
    @name.setter
    def name(self, value): # -> None:
        ...
    
    @property
    def part(self):
        """The package part containing this"""
        ...
    
    @property
    def placeholder_format(self): # -> _PlaceholderFormat:
        """
        A |_PlaceholderFormat| """
        ...
    
    @property
    def rotation(self):
        """
        Read/write float. Degre"""
        ...
    
    @rotation.setter
    def rotation(self, value): # -> None:
        ...
    
    @lazyproperty
    def shadow(self): # -> ShadowFormat:
        """|ShadowFormat| object providing """
        ...
    
    @property
    def shape_id(self):
        """Read-only positive integer ident"""
        ...
    
    @property
    def shape_type(self): # -> None:
        """
        Unique integer identify"""
        ...
    
    @property
    def top(self):
        """
        Read/write. Integer dis"""
        ...
    
    @top.setter
    def top(self, value): # -> None:
        ...
    
    @property
    def width(self):
        """
        Read/write. Integer dis"""
        ...
    
    @width.setter
    def width(self, value): # -> None:
        ...
    


class _PlaceholderFormat(ElementProxy):
    """
    Accessed via the :attr:`~.B"""
    @property
    def element(self): # -> Unknown:
        """
        The `p:ph` element prox"""
        ...
    
    @property
    def idx(self):
        """
        Integer placeholder 'id"""
        ...
    
    @property
    def type(self):
        """
        Placeholder type, a mem"""
        ...
    


