"""
This type stub file was generated by pyright.
"""

from pptx.shapes.base import BaseShape
from pptx.shared import ParentedElementProxy
from pptx.util import lazyproperty

"""Shapes based on the `p:pic` elem"""
class _BasePicture(BaseShape):
    """Base class for shapes based on a"""
    def __init__(self, pic, parent) -> None:
        ...
    
    @property
    def crop_bottom(self):
        """|float| representing relative po"""
        ...
    
    @crop_bottom.setter
    def crop_bottom(self, value): # -> None:
        ...
    
    @property
    def crop_left(self):
        """|float| representing relative po"""
        ...
    
    @crop_left.setter
    def crop_left(self, value): # -> None:
        ...
    
    @property
    def crop_right(self):
        """|float| representing relative po"""
        ...
    
    @crop_right.setter
    def crop_right(self, value): # -> None:
        ...
    
    @property
    def crop_top(self):
        """|float| representing relative po"""
        ...
    
    @crop_top.setter
    def crop_top(self, value): # -> None:
        ...
    
    def get_or_add_ln(self):
        """
        Return the `a:ln` eleme"""
        ...
    
    @lazyproperty
    def line(self): # -> LineFormat:
        """
        An instance of |LineFor"""
        ...
    
    @property
    def ln(self):
        """
        The ``<a:ln>`` element """
        ...
    


class Movie(_BasePicture):
    """A movie shape, one that places a"""
    @lazyproperty
    def media_format(self): # -> _MediaFormat:
        """The |_MediaFormat| object for th"""
        ...
    
    @property
    def media_type(self):
        """Member of :ref:`PpMediaType` des"""
        ...
    
    @property
    def poster_frame(self): # -> None:
        """Return |Image| object containing"""
        ...
    
    @property
    def shape_type(self):
        """Return member of :ref:`MsoShapeT"""
        ...
    


class Picture(_BasePicture):
    """A picture shape, one that places"""
    @property
    def auto_shape_type(self): # -> None:
        """Member of MSO_SHAPE indicating m"""
        ...
    
    @auto_shape_type.setter
    def auto_shape_type(self, member): # -> None:
        ...
    
    @property
    def image(self):
        """
        An |Image| object provi"""
        ...
    
    @property
    def shape_type(self):
        """
        Unique integer identify"""
        ...
    


class _MediaFormat(ParentedElementProxy):
    """Provides access to formatting pr"""
    ...


