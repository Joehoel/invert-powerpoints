"""
This type stub file was generated by pyright.
"""

from pptx.oxml.xmlchemy import BaseOxmlElement

"""Custom element classes for top-l"""
class CT_Chart(BaseOxmlElement):
    """`c:chart` custom element class."""
    _tag_seq = ...
    title = ...
    autoTitleDeleted = ...
    plotArea = ...
    legend = ...
    rId = ...
    _chart_tmpl = ...
    @property
    def has_legend(self): # -> bool:
        """
        True if this chart has """
        ...
    
    @has_legend.setter
    def has_legend(self, bool_value): # -> None:
        """
        Add, remove, or leave a"""
        ...
    
    @staticmethod
    def new_chart(rId): # -> Any:
        """
        Return a new ``<c:chart"""
        ...
    


class CT_ChartSpace(BaseOxmlElement):
    """`c:chartSpace` root element of a"""
    _tag_seq = ...
    date1904 = ...
    style = ...
    chart = ...
    txPr = ...
    externalData = ...
    @property
    def catAx_lst(self):
        ...
    
    @property
    def date_1904(self): # -> Literal[False]:
        """
        Return |True| if the `c"""
        ...
    
    @property
    def dateAx_lst(self):
        ...
    
    def get_or_add_title(self):
        """Return the `c:title` grandchild,"""
        ...
    
    @property
    def plotArea(self):
        """
        Return the required `c:"""
        ...
    
    @property
    def valAx_lst(self):
        ...
    
    @property
    def xlsx_part_rId(self): # -> None:
        """
        The string in the requi"""
        ...
    


class CT_ExternalData(BaseOxmlElement):
    """
    `<c:externalData>` element,"""
    autoUpdate = ...
    rId = ...


class CT_PlotArea(BaseOxmlElement):
    """
    ``<c:plotArea>`` element.
 """
    catAx = ...
    valAx = ...
    def iter_sers(self): # -> Generator[Unknown, None, None]:
        """
        Generate each of the `c"""
        ...
    
    def iter_xCharts(self): # -> Generator[Unknown, None, None]:
        """
        Generate each xChart ch"""
        ...
    
    @property
    def last_ser(self): # -> None:
        """
        Return the last `<c:ser"""
        ...
    
    @property
    def next_idx(self): # -> Literal[0]:
        """
        Return the next availab"""
        ...
    
    @property
    def next_order(self): # -> Literal[0]:
        """
        Return the next availab"""
        ...
    
    @property
    def sers(self): # -> tuple[Unknown, ...]:
        """
        Return a sequence conta"""
        ...
    
    @property
    def xCharts(self): # -> tuple[Unknown, ...]:
        """
        Return a sequence conta"""
        ...
    


class CT_Style(BaseOxmlElement):
    """
    ``<c:style>`` element; defi"""
    val = ...


