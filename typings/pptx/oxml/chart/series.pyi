"""
This type stub file was generated by pyright.
"""

from ..xmlchemy import BaseOxmlElement

"""
Series-related oxml objects.
"""
class CT_AxDataSource(BaseOxmlElement):
    """
    ``<c:cat>`` custom element """
    multiLvlStrRef = ...
    @property
    def lvls(self):
        """
        Return a list containin"""
        ...
    


class CT_DPt(BaseOxmlElement):
    """
    ``<c:dPt>`` custom element """
    _tag_seq = ...
    idx = ...
    marker = ...
    spPr = ...
    @classmethod
    def new_dPt(cls):
        """
        Return a newly created """
        ...
    


class CT_Lvl(BaseOxmlElement):
    """
    ``<c:lvl>`` custom element """
    pt = ...


class CT_NumDataSource(BaseOxmlElement):
    """
    ``<c:yVal>`` custom element"""
    numRef = ...
    @property
    def ptCount_val(self): # -> int:
        """
        Return the value of `./"""
        ...
    
    def pt_v(self, idx): # -> None:
        """
        Return the Y value for """
        ...
    


class CT_SeriesComposite(BaseOxmlElement):
    """
    ``<c:ser>`` custom element """
    _tag_seq = ...
    idx = ...
    order = ...
    tx = ...
    spPr = ...
    invertIfNegative = ...
    marker = ...
    dPt = ...
    dLbls = ...
    cat = ...
    val = ...
    xVal = ...
    yVal = ...
    smooth = ...
    bubbleSize = ...
    @property
    def bubbleSize_ptCount_val(self): # -> int:
        """
        Return the number of bu"""
        ...
    
    @property
    def cat_ptCount_val(self): # -> int:
        """
        Return the number of ca"""
        ...
    
    def get_dLbl(self, idx): # -> None:
        """
        Return the `c:dLbl` ele"""
        ...
    
    def get_or_add_dLbl(self, idx):
        """
        Return the `c:dLbl` ele"""
        ...
    
    def get_or_add_dPt_for_point(self, idx):
        """
        Return the `c:dPt` chil"""
        ...
    
    @property
    def xVal_ptCount_val(self): # -> int:
        """
        Return the number of X """
        ...
    
    @property
    def yVal_ptCount_val(self): # -> int:
        """
        Return the number of Y """
        ...
    


class CT_StrVal_NumVal_Composite(BaseOxmlElement):
    """
    ``<c:pt>`` element, can be """
    v = ...
    idx = ...
    @property
    def value(self): # -> float:
        """
        The float value of the """
        ...
    


