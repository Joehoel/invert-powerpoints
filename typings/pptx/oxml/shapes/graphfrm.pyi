"""
This type stub file was generated by pyright.
"""

from pptx.oxml.shapes.shared import BaseShapeElement
from pptx.oxml.xmlchemy import BaseOxmlElement

"""lxml custom element class for CT"""
class CT_GraphicalObject(BaseOxmlElement):
    """
    ``<a:graphic>`` element, wh"""
    graphicData = ...
    @property
    def chart(self):
        """
        The ``<c:chart>`` grand"""
        ...
    


class CT_GraphicalObjectData(BaseShapeElement):
    """
    ``<p:graphicData>`` element"""
    chart = ...
    tbl = ...
    uri = ...
    @property
    def blob_rId(self): # -> None:
        """Optional "r:id" attribute value """
        ...
    
    @property
    def is_embedded_ole_obj(self): # -> None:
        """Optional boolean indicating an e"""
        ...
    
    @property
    def progId(self): # -> None:
        """Optional str value of "progId" a"""
        ...
    
    @property
    def showAsIcon(self): # -> None:
        """Optional value of "showAsIcon" a"""
        ...
    


class CT_GraphicalObjectFrame(BaseShapeElement):
    """
    ``<p:graphicFrame>`` elemen"""
    nvGraphicFramePr = ...
    xfrm = ...
    graphic = ...
    @property
    def chart(self):
        """
        The ``<c:chart>`` great"""
        ...
    
    @property
    def chart_rId(self): # -> None:
        """
        The ``rId`` attribute o"""
        ...
    
    def get_or_add_xfrm(self):
        """
        Return the required ``<"""
        ...
    
    @property
    def graphicData(self):
        """`<a:graphicData> grandchild of t"""
        ...
    
    @property
    def graphicData_uri(self):
        """str value of `uri` attribute of """
        ...
    
    @property
    def has_oleobj(self):
        """True for graphicFrame containing"""
        ...
    
    @property
    def is_embedded_ole_obj(self):
        """Optional boolean indicating an e"""
        ...
    
    @classmethod
    def new_chart_graphicFrame(cls, id_, name, rId, x, y, cx, cy): # -> Any:
        """
        Return a ``<p:graphicFr"""
        ...
    
    @classmethod
    def new_graphicFrame(cls, id_, name, x, y, cx, cy): # -> Any:
        """
        Return a new ``<p:graph"""
        ...
    
    @classmethod
    def new_ole_object_graphicFrame(cls, id_, name, ole_object_rId, progId, icon_rId, x, y, cx, cy): # -> Any:
        """Return newly-created `<p:graphic"""
        ...
    
    @classmethod
    def new_table_graphicFrame(cls, id_, name, rows, cols, x, y, cx, cy): # -> Any:
        """
        Return a ``<p:graphicFr"""
        ...
    


class CT_GraphicalObjectFrameNonVisual(BaseOxmlElement):
    """`<p:nvGraphicFramePr>` element.
"""
    cNvPr = ...
    nvPr = ...


class CT_OleObject(BaseOxmlElement):
    """`<p:oleObj>` element, container """
    progId = ...
    rId = ...
    showAsIcon = ...
    @property
    def is_embedded(self): # -> bool:
        """True when this OLE object is emb"""
        ...
    


